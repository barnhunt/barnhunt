name: CI

on:
  push:
    branches:
      - '*'
  pull_request:

env:
  'default-python-version': '3.11'

permissions:
  contents: read

jobs:

  tests:
    name: Run Tests
    uses: ./.github/workflows/tests.yml
    with:
      default-python-version: '3.11'
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  pyoxidize:
    name: Build Windows MSI installer
    uses: ./.github/workflows/pyoxidize.yml

  package:
    name: Build python package
    needs: [tests]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true
        fetch-depth: 0

    - uses: actions/setup-python@v4
      with:
        python-version: ${{ env.default-python-version }}

    - name: Install requirements
      run: |
        python -m pip install --upgrade pip
        python -m pip install build

    - run: python -m build

    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  release:
    name: Possibly upload to PyPI and make Release
    if: github.event_name == 'push'
    needs: [package, pyoxidize]
    permissions:
      contents: write           # to create GH release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3

    - run: ls -lR

    - name: classify tag
      id: classify-tag
      run: |
        if [[ ${{ github.ref }} =~ ^refs/tags/v[[:digit:]]+(\.[[:digit:]]+){2}$ ]]; then
          echo "is_release=true" >> $GITHUB_ENV
          echo "is_release=true"
        fi

    - name: Possibly publish to PyPI
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Make GH Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: 'oxidized/**/*.msi'
        fail_on_unmatched_files: false
        generate_release_notes: true
        draft: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        prerelease: ${{ env.is_release != 'true' }}
