name: Tests

on:
  - push
  - pull_request

env:
  'default-python-version': '3.11'

jobs:
  tests:
    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        include:
          - os: 'windows-latest'
            python-version: '3.10'
            install-inkscape: true
          - os: 'macos-latest'
            python-version: '3.10'
            install-inkscape: true
          - python-version: '3.10'
            install-inkscape: true

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install inkscape (apt-get)
      if: runner.os == 'Linux' && matrix.install-inkscape
      run: |
        sudo apt-get update
        sudo apt-get install -y inkscape

    - name: Install inkscape (chocolatey)
      if: runner.os == 'Windows' && matrix.install-inkscape
      run: choco install --no-progress --timeout 600 inkscape

    - name: Install inkscape (homebrew)
      if: runner.os == 'macOS' && matrix.install-inkscape
      # This step seems to fail sporadically
      continue-on-error: true
      run: brew install inkscape

    - name: Install tox
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions

    - name: Test with tox
      run: tox
      env:
        # GITHUB_TOKEN gives us higher GH REST API rate-limits
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/upload-artifact@v3
      with:
        name: coverage-data
        path: .coverage.*

  coverage:
    name: Coverage Report
    needs: tests
    if: always()
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ env.default-python-version }}
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage[toml]
    - uses: actions/download-artifact@v2
      with:
        name: coverage-data
    - name: Test coverage and generate reports
      run: |
        coverage combine
        coverage html
        coverage report --fail-under=100 --show-missing
    - name: Upload HTML coverage report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: htmlcov
        path: htmlcov

  lint:
    name: Lint Checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ env.default-python-version }}
    - name: Install tox
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Lint
      run: tox -e lint
    - name: Mypy
      if: always()
      run: tox -e mypy
