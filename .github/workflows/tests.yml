name: Tests

on:
  workflow_call:
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows
    inputs:
      default-python-version:
        type: string
        required: false
        default: '3.11'
    secrets:
      github-token:
        required: true

jobs:
  pytest:
    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        include:
          - os: 'windows-latest'
            python-version: '3.10'
            install-inkscape: true
          - os: 'macos-latest'
            python-version: '3.10'
            install-inkscape: true
          - python-version: '3.10'
            install-inkscape: true

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install inkscape (apt-get)
      if: runner.os == 'Linux' && matrix.install-inkscape
      run: |
        sudo apt-get update
        sudo apt-get install -y inkscape

    - name: Install inkscape (chocolatey)
      if: runner.os == 'Windows' && matrix.install-inkscape
      run: choco install --no-progress --timeout 600 inkscape

    - name: Install inkscape (homebrew)
      if: runner.os == 'macOS' && matrix.install-inkscape
      # This step seems to fail sporadically
      continue-on-error: true
      run: brew install inkscape

    - name: Install tox
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions

    - name: Get Inkscape Info
      run: |
        # Use inkscape in the hopes that it will run faster during the
        # tests (on Windows).
        if inkscape --debug-info; then
          inkscape --query-height tests/drawing.svg
        fi
      shell: bash

    - name: Test with tox
      run: tox
      env:
        # GITHUB_TOKEN gives us higher GH REST API rate-limits
        GITHUB_TOKEN: ${{ secrets.github-token }}

    - uses: actions/upload-artifact@v3
      with:
        name: coverage-data
        path: .coverage.*
        retention-days: 1       # save money

  coverage:
    name: Coverage Report
    needs: pytest
    if: always()
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.default-python-version }}
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage[toml]
    - uses: actions/download-artifact@v3
      with:
        name: coverage-data
    - name: Test coverage and generate reports
      run: |
        coverage combine
        coverage html
        coverage report --fail-under=100 --show-missing
    - name: Upload HTML coverage report
      if: false # always()  # save money
      uses: actions/upload-artifact@v3
      with:
        name: htmlcov
        path: htmlcov

  lint:
    name: Lint Checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      id: py
      with:
        python-version: ${{ inputs.default-python-version }}
    - name: pre-commit cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pre-commit
          ~/.cache/pip
        key: py-${{ steps.py.outputs.python-version }}-${{ hashFiles('.pre-commit-config.yaml', 'pdm.lock') }}

    - name: Install python deps
      run: |
        python -m pip install --upgrade pip
        pip install tox pre-commit

    - name: Lint
      run: tox -e lint

    - name: Mypy
      if: always()
      run: tox -e mypy

    - name: Pre-Commit
      if: always()
      run: pre-commit run --all-files
