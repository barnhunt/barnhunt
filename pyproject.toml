[build-system]
requires = ["pdm-backend", "packaging"]
build-backend = "pdm.backend"

[project]
name = "barnhunt"
description = "Helpers for drawing Barn Hunt course maps using Inkscape"
keywords = ["barn hunt", "inkscape", "course maps"]
dynamic = ["version", "readme"]
license = {text = "GPL-3.0-only"}
authors = [{name = "Jeff Dairiki", email = "dairiki@dairiki.org"}]
urls.Homepage = "https://github.com/barnhunt/barnhunt"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Printing",
    "Topic :: Utilities",
]
requires-python = ">= 3.7"
dependencies = [
    "atomicwrites~=1.4",
    "click~=8.1",
    "importlib-metadata==4; python_version < '3.10'",
    "jinja2~=3.1",
    "lxml~=4.9",
    "marshmallow~=3.19",
    "marshmallow-dataclass~=8.5.13",
    "packaging~=23.1",
    "pexpect~=4.8",
    "pikepdf~=6.2",
    "rdflib~=6.3",
    "requests~=2.29",
    "tinycss2~=1.2",
    "typing-extensions~=4.5; python_version < \"3.10\"",
]

[project.entry-points.console_scripts]
barnhunt = "barnhunt.cli:main"

[tool.pdm.version]
source = "scm"
write_to = "barnhunt/_version.py"
write_template = '__version__ = "{}"'

[tool.pdm.build]
excludes = [
    "*~",
    ".*",
]
source-includes = [
    "README.md",
    "CHANGES.md",
    "tox.ini",
    "stubs/**/*.pyi",
    "tests",
    "pyoxidizer/pyoxidizer.bzl",
    "pyoxidizer/*.py",
]

[tool.pdm.scripts]
barnhunt.call = "barnhunt.cli:main"

oxidize.call = "pdm_build:oxidize"
post_oxidize.call = "pdm_build:copy_output"

[tool.pdm.dev-dependencies]
dev = [
    "mypy==1.2.0",
    "pdm-backend>=2.0.6",
    "types-atomicwrites",
    "types-lxml; python_version >= '3.8'", # not available for py37
    "types-requests",
    "pydeps",
    "ruff==0.6.3",
]
pyoxidizer = [
    "pyoxidizer>=0.24.0",
]
test = [
    "pytest>=7.3.1",
    "pytest-mock>=3.10.0",
    "coverage[toml]>=7.2.3",
    "pdfminer-six>=20221105",
]

################################################################
#
# coverage
#
[tool.coverage.paths]
paths = [
    "barnhunt",
    ".tox/*/site-packages/barnhunt",
    # Attempt to match source files on various GitHub Windows/macOS runners
    '*:*\barnhunt\barnhunt\barnhunt',
    '*/barnhunt/barnhunt/barnhunt',
    "*/.tox/*/site-packages/barnhunt",
]

[tool.coverage.run]
# Generate unique names for .coverage.* file
parallel = true
source_pkgs = [
    "barnhunt",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: (?i:no cover)",
    "if TYPE_CHECKING:",
    'if __name__ == "__main__"',
    '^\s*\.\.\.\s*$',
    '^\s*raise NotImplementedError()',
]

################################################################
#
# pytest
#
[tool.pytest.ini_options]
norecursedirs = [
    ".tox",
    "build",
]
addopts = "--strict-markers"
filterwarnings = [
    # pexpect (as of 4.8) still supports py27, so uses setDaemon
    "ignore:setDaemon.*deprecated:DeprecationWarning:pexpect",
]
markers = [
    "requiresinternet: marks tests requiring an internet connection",
]

################################################################
#
# mypy
#
[tool.mypy]
mypy_path = [
    "$MYPY_CONFIG_FILE_DIR/stubs",
    "$MYPY_CONFIG_FILE_DIR/tests",
]
files = [
    "$MYPY_CONFIG_FILE_DIR/barnhunt",
    "$MYPY_CONFIG_FILE_DIR/tests",
]
exclude = [
    'conftest\.py$',
]

show_error_codes = true
error_summary = true

strict = true

[[tool.mypy.overrides]]
module = [
    # Mypy doesn't like that pikepdf dynamically generates it's __all__ list
    "pikepdf",
]
implicit_reexport = true

[[tool.mypy.overrides]]
module = [
    # FIXME: should replace most of these
    "tinycss2",
]
ignore_missing_imports = true


[tool.ruff]
extend-exclude = [".pdm-build"]

[tool.ruff.lint]
explicit-preview-rules = true
allowed-confusables = ["’", "–"]
select = ["ALL"]
ignore = [
    "COM812",                   # missing-trailing-comma
    "SLF001",                   # flake8-self (private-member-access)
    "ISC001",                   # (conflicts with `ruff format`)
    "PT004",                    # (pytest-missing-fixture-name-underscore)
    "SIM102",                   # collapsible-if
    "SIM108",                   # if-else-block-instead-of-if-exp
    "SIM117",                   # multiple-with-statements

    "PL",                       # pylint
    "TCH",                      # flake8-type-checking
    "EM",                       # flake8-errmsg
    "TRY",                      # tryceratops (exception handling anti-patterns)

    "D",                        # pydocstyle
    "N",                        # pep8-naming
    "ANN",                      # flake8-annotations
    "S",                        # flake8-bandit
    "BLE",                      # flake8-blind-except
    "FBT",                      # flake8-boolean-trap
    "A",                        # flake8-builtins
    "DTZ",                      # flake8-datetimez
    "FIX", "TD",                # flake8-fixme, flake8-todos
    "G",                        # flake8-logging-format
    "INP",                      # flake8-no-pep420
    "T20",                      # flake8-print
    "TID",                      # flake8-tidy-imports
    "ARG",                      # flake8-unused-arguments
    "PTH",                      # flake8-use-pathlib
    "ERA",                      # eradicate (commented-out-code)
]

[tool.ruff.lint.isort]
force-single-line = true
order-by-type = false
known-local-folder = ["barnhunt"]

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true
